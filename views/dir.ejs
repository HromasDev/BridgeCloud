<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/dropzone@5/dist/min/dropzone.min.css" type="text/css" />
    <link rel="stylesheet" href="./main.css">
    <script src="./main.js"></script>
    <title>BridgeCloud</title>

    <!----===== Boxicons CSS ===== -->
    <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
</head>

<body>
    <div class="container d-flex row pt-4">
        <nav class="sidebar close">
            <header>
                <div class="image-text">
                    <span class="image">
                        <img src=<%=photo %> alt="">
                    </span>
                    <div class="text logo-text">
                        <span class="name" id="username">
                            <%= name %>
                        </span>
                    </div>
                </div>

                <i class='bx bx-chevron-right toggle'></i>
            </header>

            <div class="menu-bar">
                <div class="menu">
                    <ul class="menu-links">
                        <li class="nav-link">
                            <a href="/my-drive#nav-disk">
                                <i class='bx bx-home-alt icon'></i>
                                <span class="text nav-text">Главная</span>
                            </a>
                        </li>

                        <li class="nav-link">
                            <a href="/my-drive#nav-recent">
                                <i class='bx bx-time-five icon'></i>
                                <span class="text nav-text">Недавние</span>
                            </a>
                        </li>

                        <li class="nav-link">
                            <a href="/my-drive#nav-favourite">
                                <i class='bx bx-star icon'></i>
                                <span class="text nav-text">Избранные</span>
                            </a>
                        </li>

                    </ul>
                </div>

                <div class="bottom-content">
                    <li class="">
                        <a href="/settings">
                            <i class='bx bx-cog icon'></i>
                            <span class="text nav-text">Настройки</span>
                        </a>
                    </li>

                    <li class="">
                        <a href="/logout">
                            <i class='bx bx-log-out icon'></i>
                            <span class="text nav-text">Выход</span>
                        </a>
                    </li>

                    <li class="mode">
                        <div class="sun-moon">
                            <i class='bx bx-moon icon moon'></i>
                            <i class='bx bx-sun icon sun'></i>
                        </div>
                        <span class="mode-text text">Тёмная тема</span>
                        <div class="toggle-switch">
                            <span class="theme-switch"></span>
                        </div>
                    </li>

                </div>
            </div>
        </nav>


        <div class="workspace">
            <section>
                <h2 class="px-5 py-4 border-bottom contrast-text" id="nav-disk">Мой диск <img class="icon middle"
                        src="./assets/icons/drive.png"></h1>
                    <div class="create-file">
                        <form method="post" action="/create-file">
                            <input type="text" class="text" name="file_name" required>
                            <button type="submit">
                                <i class='bx bx-plus icon'></i>
                            </button>
                        </form>


                    </div>
                    <form action="/send-files" id="filedrop" class="dropzone mb-5" enctype="utf-8">
                        <div id="output">
                        </div>
                        <script>

                            function convertBytes(bytes) {
                                if (bytes >= 1024 * 1024) {
                                    return (bytes / (1024 * 1024)).toFixed(2) + ' MB';
                                } else if (bytes >= 1024) {
                                    return (bytes / 1024).toFixed(2) + ' KB';
                                } else {
                                    return bytes + ' B';
                                }
                            }

                            Dropzone.options.filedrop = {
                                maxFilesize: 4096,
                                init: function () {
                                    this.on("addedfile", file => {
                                        fetch('/your-route')
                                            .then(response => response.json())
                                            .then(async data => {
                                                const fileObject = JSON.parse(data.content);
                                                await renderData(fileObject)
                                                this.removeFile(file)
                                            })
                                            .catch((error) => {
                                                console.error('Error:', error);
                                            });
                                    });

                                }
                            }


                            fetch('/get-data')
                                .then(response => response.json())
                                .then(data => {
                                    renderData(data);
                                })
                                .catch(error => console.error('Ошибка:', error));



                            function renderData(data) {
                                let outputDiv = document.getElementById('output');
                                outputDiv.innerHTML = ''; // Clear the previous content
                                for (let key in data) {
                                    let value = data[key];
                                    let file = document.createElement('div');
                                    file.classList.add('file');
                                    file.classList.add('contrast-text');
                                    let links = document.createElement('div');
                                    links.classList.add('links');
                                    let info = document.createElement('div');
                                    info.classList.add('info');
                                    let name = document.createElement('span');
                                    name.classList.add('name');
                                    let size = document.createElement('span');
                                    size.classList.add('size');
                                    let img = document.createElement('img');
                                    img.classList.add('icon')
                                    let download = document.createElement('a');
                                    let remove = document.createElement('a')

                                    // Если расширение файла не существует, создаем папку
                                    if (value.title !== value.path) {
                                        img.src = "./assets/icons/folder.png";
                                        file.onclick = () => {
                                            // При нажатии на папку перерендериваем содержимое
                                            renderData(value.contents);
                                        };
                                    } else {
                                        // Иначе создаем файл
                                        if (value.ext === 'jpg' || value.ext === 'png' || value.ext === 'gif' || value.ext === 'image' || value.ext === 'ico') {
                                            img.src = "./assets/icons/photo.png";
                                        } else if (value.ext === 'txt') {
                                            img.src = "./assets/icons/txt.png";
                                        } else if (value.ext === 'exe') {
                                            img.src = "./assets/icons/exe.png";
                                        } else if (value.ext === 'dll') {
                                            img.src = "./assets/icons/dll.png";
                                        } else if (value.ext === 'torrent') {
                                            img.src = "./assets/icons/torrent.png";
                                        } else if (value.ext === 'rar' || value.ext === 'zip') {
                                            img.src = "./assets/icons/archive.png";
                                        } else if (value.ext === 'ppt' || value.ext === 'pptx') {
                                            img.src = "./assets/icons/power_point.png";
                                        } else if (value.ext === 'doc' || value.ext === 'docx') {
                                            img.src = "./assets/icons/word.png";
                                        } else if (value.ext === 'xls' || value.ext === 'xlsx' || value.ext === 'xlsm' || value.ext === 'xltx' || value.ext === 'xltm') {
                                            img.src = "./assets/icons/excel.png";
                                        } else if (value.ext === 'mdb' || value.ext === 'accdb' || value.ext === 'mde' || value.ext === 'ldb' || value.ext === 'laccdb') {
                                            img.src = "./assets/icons/access.png";
                                        } else {
                                            img.src = "./assets/icons/file.png";
                                        }
                                        name.textContent = value.title;
                                        size.textContent = convertBytes(value.size);
                                        download.textContent = 'Скачать';
                                        remove.textContent = 'Удалить';
                                        download.href = value.url;
                                        remove.onclick = () => {
                                            file.remove();
                                            fetch('/delete-file', {
                                                method: 'POST',
                                                headers: {
                                                    'Content-Type': 'application/json',
                                                },
                                                body: JSON.stringify({ file: value.msgId }),
                                            })
                                                .then(response => response.json())
                                                .catch((error) => {
                                                    console.error('Error:', error);
                                                });
                                        }
                                        file.appendChild(img);
                                        file.appendChild(info);
                                        file.appendChild(links);
                                        info.appendChild(name);
                                        info.appendChild(size);
                                        links.appendChild(remove);
                                        links.appendChild(download);
                                    }
                                    outputDiv.appendChild(file);
                                }
                            }

                        </script>
                    </form>
            </section>

        </div>
        <script>
            const body = document.querySelector('body'),
                sidebar = body.querySelector('nav'),
                toggle = body.querySelector(".toggle"),
                modeSwitch = body.querySelector(".toggle-switch"),
                modeText = body.querySelector(".mode-text");
            toggle.addEventListener("click", () => {
                sidebar.classList.toggle("close");
            })
            modeSwitch.addEventListener("click", () => {
                body.classList.toggle("dark");
                if (body.classList.contains("dark")) {
                    modeText.innerText = "Светлая тема";
                    localStorage.setItem('theme', 'dark');
                } else {
                    modeText.innerText = "Тёмная тема";
                    localStorage.setItem('theme', 'light');
                }
            });
        </script>

        <footer>
            <script>
                document.body.classList.toggle(localStorage.getItem("theme"));
            </script>
        </footer>
</body>

</html>