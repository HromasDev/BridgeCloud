<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
        crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

    <script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/dropzone@5/dist/min/dropzone.min.css" type="text/css" />
    <link rel="stylesheet" href="./main.css">
    <title>BridgeCloud</title>
</head>

<body>
    <div class="container d-flex pt-4">
        <div class="vertical-menu nav col-3 flex-column pe-4">
            <a class="nav-link text-dark" href="#nav-disk">Диск</a>
            <a class="nav-link text-dark" href="#nav-recent">Недавние</a>
            <a class="nav-link text-dark" href="#nav-favorite">Помеченые</a>
            <a class="nav-link text-dark" href="#nav-basket">Корзина</a>
            <a class="nav-link text-light bg-danger" href="/logout">Выход</a>
        </div>
        <div class="col">
            <section>
                <h2 class="px-5 py-4 border-bottom" id="nav-disk">Мой диск <img class="icon"
                        src="./assets/icons/drive.png"></h1>
                    <form action="/send-files" id="filedrop" class="dropzone mb-5" enctype="utf-8">
                        <div id="output">
                        </div>
                        <script>
                            function convertBytes(bytes) {
                                if (bytes >= 1024 * 1024) {
                                    return (bytes / (1024 * 1024)).toFixed(2) + ' MB';
                                } else if (bytes >= 1024) {
                                    return (bytes / 1024).toFixed(2) + ' KB';
                                } else {
                                    return bytes + ' B';
                                }
                            }



                            Dropzone.options.filedrop = {
                                maxFilesize: 4096,
                                init: function () {
                                    this.on("addedfile", file => {
                                        fetch('/your-route')
                                            .then(response => response.json())
                                            .then(async data => {
                                                const fileObject = JSON.parse(data.content);
                                                await renderData(fileObject)
                                                this.removeFile(file)
                                            })
                                            .catch((error) => {
                                                console.error('Error:', error);
                                            });
                                    });
        
                                }
                            }


                            fetch('/get-data')
                                .then(response => response.json())
                                .then(data => {
                                    renderData(data);
                                })
                                .catch(error => console.error('Ошибка:', error));



                            function renderData(data) {
                                let outputDiv = document.getElementById('output');
                                outputDiv.innerHTML = ''; // Clear the previous content
                                for (let key in data) {
                                    let value = data[key];
                                    let file = document.createElement('div');
                                    file.classList.add('file');
                                    let links = document.createElement('div');
                                    links.classList.add('links');
                                    let info = document.createElement('div');
                                    info.classList.add('info');
                                    let name = document.createElement('span');
                                    name.classList.add('name');
                                    let size = document.createElement('span');
                                    size.classList.add('size');
                                    let img = document.createElement('img');
                                    img.classList.add('icon')
                                    let download = document.createElement('a');
                                    let remove = document.createElement('a')
                                    if (value.ext === 'jpg' || value.ext === 'png' || value.ext === 'gif' || value.ext === 'image' || value.ext === 'ico') {
                                        img.src = "./assets/icons/photo.png";
                                    } else if (value.ext === 'txt') {
                                        img.src = "./assets/icons/txt.png";
                                    } else if (value.ext === 'exe') {
                                        img.src = "./assets/icons/exe.png";
                                    } else if (value.ext === 'dll') {
                                        img.src = "./assets/icons/dll.png";
                                    } else if (value.ext === 'rar' || value.ext === 'zip') {
                                        img.src = "./assets/icons/archive.png";
                                    } else {
                                        img.src = "./assets/icons/file.png";
                                    }
                                    name.textContent = value.title;
                                    size.textContent = convertBytes(value.size);
                                    download.textContent = 'Скачать';
                                    remove.textContent = 'Удалить';
                                    download.href = value.url;
                                    remove.onclick = () => {
                                        file.remove();
                                        fetch('/delete-file', {
                                            method: 'POST',
                                            headers: {
                                                'Content-Type': 'application/json',
                                            },
                                            body: JSON.stringify({ file: value.msgId }),
                                        })
                                            .then(response => response.json())
                                            .then(data => console.log(data))
                                            .catch((error) => {
                                                console.error('Error:', error);
                                            });

                                    }
                                    file.appendChild(img);
                                    file.appendChild(info);
                                    file.appendChild(links);
                                    info.appendChild(name);
                                    info.appendChild(size);
                                    links.appendChild(remove);
                                    links.appendChild(download);
                                    outputDiv.appendChild(file);
                                }
                            }
                        </script>
                    </form>
            </section>
            <section>
                <h2 class="px-5 py-4 border-bottom" id="nav-recent">Недавние</h1>
                    <form action="/drive" class="dropzone"></form>
            </section>
        </div>
    </div>
</body>

</html>
